# docker-compose.prod.yml (FOR PRODUCTION DEPLOYMENT)
version: '3.8'

services:
  frontend:
    build: ./frontend
    container_name: seoul-flow-frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - seoul-flow-net

  backend:
    build: ./backend
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    networks:
      - seoul-flow-net

  kafka:
    restart: unless-stopped
    # 배포 환경에서는 외부 PC 접속이 필요 없으므로 포트를 열지 않을 수 있습니다.
    # ports:
    #   - "9092:9092" 
    environment:
      # 배포 환경에서는 컨테이너 간 통신만 필요
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT

  akhq:
    restart: unless-stopped
    ports:
      - "8088:8080" # 관리자만 접속할 수 있도록 IP 제한 등을 웹서버에서 설정
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-cluster:
              properties:
                bootstrap.servers: "kafka:9092"

  spark:
    build: ./spark  # ./spark 폴더의 Dockerfile을 사용해 빌드
    container_name: spark-seoul-flow
    depends_on:
      - kafka # kafka가 실행된 후에 실행되도록 의존성 설정
    networks:
      - seoul-flow-net
    # 컨테이너 실행 시 수행할 spark-submit 명령어 정의
    # Scala 코드에 kafka:9092 주소를 인자로 전달
    command: >
      /opt/bitnami/spark/bin/spark-submit
      --class com.seoulflow.spark.GrazingDetector
      --master local[*]
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.6
      /app/app.jar
      kafka:9092